import * as _Controller from './serializers/serializer';
import { UsersController } from './controllers/users';
import { BucketsController } from './controllers/buckets';
import { PostsController } from './controllers/posts';
import * as _Models from './models/model';
import * as _SchemaFactory from './models/schema-items/schema-item-factory';
import { isValidObjectID } from './utils/utils';
import * as permissions from './utils/permission-controllers';
import { AdminSerializer } from './serializers/admin-serializer';
import { BucketSerializer } from './serializers/bucket-serializer';
import { CommentsSerializer } from './serializers/comments-serializer';
import { CORSSerializer } from './serializers/cors-serializer';
import { EmailsSerializer } from './serializers/emails-serializer';
import { ErrorSerializer } from './serializers/error-serializer';
import { FileSerializer } from './serializers/file-serializer';
import { PageSerializer } from './serializers/page-serializer';
import { PostsSerializer } from './serializers/posts-serializer';
import { CategoriesSerializer } from './serializers/categories-serializer';
import { SessionSerializer } from './serializers/session-serializer';
import { StatsSerializer } from './serializers/stats-serializer';
import { UserSerializer } from './serializers/user-serializer';
import { AuthSerializer } from './serializers/auth-serializer';
import { FilesController } from './controllers/files';
import { StatsController } from './controllers/stats';
import { CommentsController } from './controllers/comments';
import { SessionsController } from './controllers/sessions';
export declare const Controller: typeof _Controller.Serializer;
export declare const Model: typeof _Models.Model;
export declare const SchemaFactory: typeof _SchemaFactory;
export declare const isValidID: typeof isValidObjectID;
export declare const authentication: typeof permissions;
export declare const controllers: {
    users: UsersController;
    buckets: BucketsController;
    posts: PostsController;
    comments: CommentsController;
    files: FilesController;
    stats: StatsController;
    sessions: SessionsController;
};
export declare const serializers: {
    admin: typeof AdminSerializer;
    auth: typeof AuthSerializer;
    posts: typeof PostsSerializer;
    categories: typeof CategoriesSerializer;
    comments: typeof CommentsSerializer;
    cors: typeof CORSSerializer;
    email: typeof EmailsSerializer;
    error: typeof ErrorSerializer;
    file: typeof FileSerializer;
    bucket: typeof BucketSerializer;
    renderer: typeof PageSerializer;
    session: typeof SessionSerializer;
    stats: typeof StatsSerializer;
    user: typeof UserSerializer;
};
export { IBucketEntry } from './types/models/i-bucket-entry';
export { ICategory } from './types/models/i-category';
export { IComment } from './types/models/i-comment';
export { IFileEntry } from './types/models/i-file-entry';
export { IGMail, IMailer, IMailgun, IMailOptions } from './types/models/i-mail';
export { IModelEntry } from './types/models/i-model-entry';
export { IPost } from './types/models/i-post';
export { IRender } from './types/models/i-render';
export { ISessionEntry } from './types/models/i-session-entry';
export { IStorageStats } from './types/models/i-storage-stats';
export { IUserEntry } from './types/models/i-user-entry';
export { IAuthenticationResponse, AuthTokens, BucketTokens, CategoriesTokens, CommentTokens, EmailTokens, FileTokens, IRemoveResponse, IResponse, ISimpleResponse, IUploadBinaryResponse, IUploadResponse, IUploadTextResponse, Page, PostTokens, RenderTokens, SessionTokens, StatTokens, UserTokens } from './types/tokens/standard-tokens';
export { IAuthReq } from './types/tokens/i-auth-request';
export { ILoginToken } from './types/tokens/i-login-token';
export { IMessage } from './types/tokens/i-message';
export { IRegisterToken } from './types/tokens/i-register-token';
export { SocketTokens } from './types/tokens/i-socket-token';
export { IUploadToken } from './types/tokens/i-upload-token';
export { IClient } from './types/config/properties/i-client';
export { getJson } from './frontend-api/http-clients';
